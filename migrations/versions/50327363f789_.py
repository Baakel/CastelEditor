"""empty message

Revision ID: 50327363f789
Revises: 
Create Date: 2018-12-12 14:27:58.244641

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '50327363f789'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assumptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bb_mechanisms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('authenticity', sa.Boolean(), nullable=True),
    sa.Column('confidentiality', sa.Boolean(), nullable=True),
    sa.Column('integrity', sa.Boolean(), nullable=True),
    sa.Column('extra_hg', sa.String(length=280), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('extra_hard_goal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=280), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creator', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('final_assumptions', sa.Boolean(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=True)
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nickname', sa.String(length=64), nullable=True),
    sa.Column('contact', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_contact'), 'users', ['contact'], unique=True)
    op.create_index(op.f('ix_users_nickname'), 'users', ['nickname'], unique=True)
    op.create_table('bb_assumptions',
    sa.Column('bb_id', sa.Integer(), nullable=True),
    sa.Column('assumptions_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assumptions_id'], ['assumptions.id'], ),
    sa.ForeignKeyConstraint(['bb_id'], ['bb_mechanisms.id'], )
    )
    op.create_table('functional_requirement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=280), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('good',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=140), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hard_goal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('authenticity', sa.String(length=280), nullable=True),
    sa.Column('confidentiality', sa.String(length=280), nullable=True),
    sa.Column('integrity', sa.String(length=280), nullable=True),
    sa.Column('applications', sa.String(length=280), nullable=True),
    sa.Column('services', sa.String(length=280), nullable=True),
    sa.Column('priority', sa.Boolean(), nullable=True),
    sa.Column('cb_value', sa.String(length=300), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('extra_hg_used', sa.Boolean(), nullable=True),
    sa.Column('extra_hg', sa.Boolean(), nullable=True),
    sa.Column('original_hg', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('stakeholder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nickname', sa.String(length=64), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sub_service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wprojects',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('freq_serv',
    sa.Column('fr_id', sa.Integer(), nullable=True),
    sa.Column('serv_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fr_id'], ['functional_requirement.id'], ),
    sa.ForeignKeyConstraint(['serv_id'], ['sub_service.id'], )
    )
    op.create_table('good_stakeholder',
    sa.Column('good_id', sa.Integer(), nullable=True),
    sa.Column('stakeholder_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['good_id'], ['good.id'], ),
    sa.ForeignKeyConstraint(['stakeholder_id'], ['stakeholder.id'], )
    )
    op.create_table('hard_mechanism',
    sa.Column('hg_id', sa.Integer(), nullable=True),
    sa.Column('bbmech_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bbmech_id'], ['bb_mechanisms.id'], ),
    sa.ForeignKeyConstraint(['hg_id'], ['hard_goal.id'], )
    )
    op.create_table('soft_goal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cb_value', sa.String(length=300), nullable=True),
    sa.Column('authenticity', sa.String(length=280), nullable=True),
    sa.Column('confidentiality', sa.String(length=280), nullable=True),
    sa.Column('integrity', sa.String(length=280), nullable=True),
    sa.Column('priority', sa.Boolean(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('hardgoal_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hardgoal_id'], ['hard_goal.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('soft_goal')
    op.drop_table('hard_mechanism')
    op.drop_table('good_stakeholder')
    op.drop_table('freq_serv')
    op.drop_table('wprojects')
    op.drop_table('sub_service')
    op.drop_table('stakeholder')
    op.drop_table('roles_users')
    op.drop_table('hard_goal')
    op.drop_table('good')
    op.drop_table('functional_requirement')
    op.drop_table('bb_assumptions')
    op.drop_index(op.f('ix_users_nickname'), table_name='users')
    op.drop_index(op.f('ix_users_contact'), table_name='users')
    op.drop_table('users')
    op.drop_table('role')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_table('projects')
    op.drop_table('extra_hard_goal')
    op.drop_table('bb_mechanisms')
    op.drop_table('assumptions')
    # ### end Alembic commands ###
